{
	"identification": "net.maxon.fileid.descriptiondefinition",
	"content": {
		"_descriptionsVersion": 6,
		"_descriptions": [
			"net.maxon.nodespace.base",
			{
				"referenceClassType": "net.maxon.class.datadescriptiondefinition",
				"_info": {
					"referenceDataType": "net.maxon.interface.datadictionary-C",
					"_impl": {
						"_mode": 1,
						"_keyType": "net.maxon.datatype.internedid",
						"_fastData": [
							"net.maxon.description.data.info.includefile",
							{
								"dataType": "net.maxon.interface.url-C",
								"content": {
									"referenceDataType": "net.maxon.interface.url-C",
									"_scheme": "relative",
									"_path": "frameworks/nodespace.framework/source/maxon/datadescription_node_spaces.h",
									"_authority": {},
									"_data": {}
								}
							}
						]
					}
				},
				"_description": [
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "include"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "net.maxon.object.base"
								},
								"net.maxon.description.data.base.generateignoreheader",
								{
									"dataType": "bool",
									"content": true
								},
								"net.maxon.description.data.base.include",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.object.base"
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "exportedstring"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "net.maxon.nodespace.base.dummy"
								},
								"net.maxon.description.data.base.datatype",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "bool"
								},
								"net.maxon.description.data.base.generateignoreheader",
								{
									"dataType": "bool",
									"content": false
								},
								"net.maxon.description.data.base.inheritstring",
								{
									"dataType": "bool",
									"content": true
								},
								"net.maxon.description.data.base.optionalstring",
								{
									"dataType": "bool",
									"content": true
								}
							]
						}
					}
				]
			},
			"net.maxon.nodespace.exchange.bundle.usdpreviewsurface",
			{
				"referenceClassType": "net.maxon.class.datadescriptiondefinition",
				"_info": {
					"referenceDataType": "net.maxon.interface.datadictionary-C",
					"_impl": {
						"_mode": 1,
						"_keyType": "net.maxon.datatype.internedid",
						"_fastData": [
							"net.maxon.description.data.info.classification",
							{
								"dataType": "net.maxon.datatype.id",
								"content": "portbundle"
							},
							"net.maxon.description.data.info.comment",
							{
								"dataType": "net.maxon.interface.cstring-C",
								"content": "Describes a USD PreviewSurface material as of October 2019 found here:\u000D\u000Ahttps://graphics.pixar.com/usd/docs/UsdPreviewSurface-Proposal.html"
							},
							"net.maxon.description.data.info.includefile",
							{
								"dataType": "net.maxon.interface.url-C",
								"content": {
									"referenceDataType": "net.maxon.interface.url-C",
									"_scheme": "relative",
									"_path": "frameworks/nodespace.framework/source/maxon/datadescription_node_bundles.h",
									"_authority": {},
									"_data": {}
								}
							}
						]
					}
				},
				"_description": [
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "include"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "net.maxon.object.base"
								},
								"net.maxon.description.data.base.generateignoreheader",
								{
									"dataType": "bool",
									"content": true
								},
								"net.maxon.description.data.base.include",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.object.base"
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "diffuseColor"
								},
								"net.maxon.description.data.base.classification",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "input"
								},
								"net.maxon.description.data.base.comment",
								{
									"dataType": "net.maxon.interface.cstring-C",
									"content": "When using metallic workflow this is interpreted as albedo."
								},
								"net.maxon.description.data.base.datatype",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.parametrictype.col<3,float>"
								},
								"net.maxon.description.data.base.defaultvalue",
								{
									"dataType": "net.maxon.parametrictype.col<3,float64>",
									"content": {
										"r": 0.18,
										"g": 0.18,
										"b": 0.18
									}
								},
								"net.maxon.description.data.base.limitvalue",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "both"
								},
								"net.maxon.description.data.base.maxvalue",
								{
									"dataType": "net.maxon.parametrictype.col<3,float64>",
									"content": {
										"r": 10000.0,
										"g": 10000.0,
										"b": 10000.0
									}
								},
								"net.maxon.description.data.base.unit",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "none"
								},
								"net.maxon.node.attribute.constantparameter",
								{
									"dataType": "bool",
									"content": true
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "emissiveColor"
								},
								"net.maxon.description.data.base.classification",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "input"
								},
								"net.maxon.description.data.base.comment",
								{
									"dataType": "net.maxon.interface.cstring-C",
									"content": "Emissive component. "
								},
								"net.maxon.description.data.base.datatype",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.parametrictype.col<3,float>"
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "workflow"
								},
								"net.maxon.description.data.base.classification",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "input"
								},
								"net.maxon.description.data.base.comment",
								{
									"dataType": "net.maxon.interface.cstring-C",
									"content": "This node can fundamentally operate in two modes : Specular workflow where you provide a texture/value to the \"specularColor\" input.\u000D\u000AOr, Metallic workflow where you provide a texture/value to the \"metallic\" input.\u000D\u000A\u000D\u000ASpecular Workflow:\u000D\u000ASpecular color to be used. This is the color at 0 incidence. Edge color is assumed white.\u000D\u000ATransition between the two colors according to Schlick fresnel approximation.\u000D\u000A\u000D\u000AMetalness Workflow:\u000D\u000AUse 1 for metallic surfaces and 0 for non-metallic.\u000D\u000A- If metallic is 1.0, then F0 (reflectivity at 0 degree incidence)\u000D\u000Awill be derived from ior ( (1-ior)/(1+ior) )^2, then multiplied\u000D\u000Aby Albedo; while edge F90 reflectivity will simply be the Albedo.\u000D\u000A(As an option, you can set ior to 0 such that F0 becomes equal\u000D\u000Ato F90 and thus the Albedo).\u000D\u000A\u000D\u000A- If metallic is 0.0, then Albedo is ignored; F0 is derived from\u000D\u000Aior and F90 is white. In between, we interpolate.\u000D\u000A"
								},
								"net.maxon.description.data.base.datatype",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.datatype.internedid"
								},
								"net.maxon.description.data.base.defaultvalue",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "metalness"
								},
								"net.maxon.description.data.base.enum",
								{
									"dataType": "(net.maxon.datatype.id,net.maxon.datatype.data)",
									"isArray": true,
									"content": [
										{
											"_0": "specular",
											"_1": {
												"dataType": "net.maxon.datatype.internedid",
												"content": "specular"
											}
										},
										{
											"_0": "metalness",
											"_1": {
												"dataType": "net.maxon.datatype.internedid",
												"content": "metalness"
											}
										}
									]
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "specularColor"
								},
								"net.maxon.description.data.base.classification",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "input"
								},
								"net.maxon.description.data.base.comment",
								{
									"dataType": "net.maxon.interface.cstring-C",
									"content": "Specular color to be used. This is the color at 0 incidence. Edge color is assumed white. \u000D\u000ATransition between the two colors according to Schlick fresnel approximation."
								},
								"net.maxon.description.data.base.datatype",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.parametrictype.col<3,float>"
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "metallic"
								},
								"net.maxon.description.data.base.classification",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "input"
								},
								"net.maxon.description.data.base.comment",
								{
									"dataType": "net.maxon.interface.cstring-C",
									"content": " Use 1 for metallic surfaces and 0 for non-metallic.\u000D\u000A- If metallic is 1.0, then F0 (reflectivity at 0 degree incidence) will be derived from ior ( (1-ior)/(1+ior) )^2, then multiplied by Albedo; while edge F90 reflectivity will simply be the Albedo.\u000D\u000A(As an option, you can set ior to 0 such that F0 becomes equal to F90 and thus the Albedo).\u000D\u000A- If metallic is 0.0, then Albedo is ignored; F0 is derived from ior and F90 is white. In between, we interpolate."
								},
								"net.maxon.description.data.base.datatype",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "float"
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "roughness"
								},
								"net.maxon.description.data.base.classification",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "input"
								},
								"net.maxon.description.data.base.comment",
								{
									"dataType": "net.maxon.interface.cstring-C",
									"content": "Roughness for the specular lobe. The value ranges from 0 to 1,\u000D\u000Awhich goes from a perfectly specular surface at 0.0 to maximum roughness\u000D\u000Aof the specular lobe. This value is usually squared before use with a GGX or Beckmann lobe."
								},
								"net.maxon.description.data.base.datatype",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "float"
								},
								"net.maxon.description.data.base.defaultvalue",
								{
									"dataType": "float64",
									"content": 0.5
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "clearcoat"
								},
								"net.maxon.description.data.base.classification",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "input"
								},
								"net.maxon.description.data.base.comment",
								{
									"dataType": "net.maxon.interface.cstring-C",
									"content": "Second specular lobe amount. The color is white."
								},
								"net.maxon.description.data.base.datatype",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "float"
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "clearcoatRoughness"
								},
								"net.maxon.description.data.base.classification",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "input"
								},
								"net.maxon.description.data.base.comment",
								{
									"dataType": "net.maxon.interface.cstring-C",
									"content": "Roughness for the second specular lobe."
								},
								"net.maxon.description.data.base.datatype",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "float"
								},
								"net.maxon.description.data.base.defaultvalue",
								{
									"dataType": "float64",
									"content": 0.01
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "opacity"
								},
								"net.maxon.description.data.base.classification",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "input"
								},
								"net.maxon.description.data.base.comment",
								{
									"dataType": "net.maxon.interface.cstring-C",
									"content": "When opacity is 1.0 then the gprim is fully opaque,\u000D\u000Aif it is smaller than 1.0 then the prim is translucent,\u000D\u000Awhen it is 0 the gprim is transparent.\u000D\u000ANote that even a fully transparent object still receives\u000D\u000Alighting as, for example, perfectly clear glass still has a specular response."
								},
								"net.maxon.description.data.base.datatype",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "float"
								},
								"net.maxon.description.data.base.defaultvalue",
								{
									"dataType": "float64",
									"content": 1.0
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "opacityThreshold"
								},
								"net.maxon.description.data.base.classification",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "input"
								},
								"net.maxon.description.data.base.comment",
								{
									"dataType": "net.maxon.interface.cstring-C",
									"content": "The opacityThreshold input is useful for creating geometric cut-outs based\u000D\u000Aon the opacity input. A value of 0.0 indicates that no masking is applied\u000D\u000Ato the opacity input, while a value greater than 0.0 indicates that rendering\u000D\u000Aof the surface is limited to the areas where the opacity is greater than that\u000D\u000Avalue. A classic use of opacityThreshold is to create a leaf from an opacity\u000D\u000Ainput texture, in that case the threshold determines the parts of the opacity\u000D\u000Atexture that will be fully transparent and not receive lighting. Note that when\u000D\u000AopacityThreshold is greater than zero, then opacity modulates the presence of\u000D\u000Athe surface, rather than its transparency - pathtracers might implement this as\u000D\u000Aallowing ((1 - opacity) * 100) % of the rays that do intersect the object to\u000D\u000Ainstead pass through it unhindered, and rasterizers may interpret opacity as\u000D\u000Apixel coverage.  Thus, opacityThreshold serves as a switch for how the opacity\u000D\u000Ainput is interpreted; this \"translucent or masked\" behavior is common in engines\u000D\u000Aand renderers, and makes the UsdPreviewSurface easier to interchange.  It does imply,\u000D\u000Ahowever, that it is not possible to faithfully recreate a glassy/translucent material\u000D\u000Athat also provides an opacity-based mask... so no single-polygon glass leaves."
								},
								"net.maxon.description.data.base.datatype",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "float"
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "ior"
								},
								"net.maxon.description.data.base.classification",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "input"
								},
								"net.maxon.description.data.base.comment",
								{
									"dataType": "net.maxon.interface.cstring-C",
									"content": "Index of Refraction to be used for translucent objects."
								},
								"net.maxon.description.data.base.datatype",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "float"
								},
								"net.maxon.description.data.base.defaultvalue",
								{
									"dataType": "float64",
									"content": 1.5
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "normal"
								},
								"net.maxon.description.data.base.classification",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "input"
								},
								"net.maxon.description.data.base.comment",
								{
									"dataType": "net.maxon.interface.cstring-C",
									"content": "Expects normal in tangent space [(-1,-1,-1), (1,1,1)] This means\u000D\u000Ayour texture reader implementation should provide data to this\u000D\u000Anode that is properly scaled and ready to be consumed as a tangent space normal."
								},
								"net.maxon.description.data.base.datatype",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.parametrictype.vec<3,float>"
								},
								"net.maxon.description.data.base.defaultvalue",
								{
									"dataType": "net.maxon.parametrictype.vec<3,float64>",
									"content": {
										"x": 0.0,
										"y": 0.0,
										"z": 1.0
									}
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "displacement"
								},
								"net.maxon.description.data.base.classification",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "input"
								},
								"net.maxon.description.data.base.comment",
								{
									"dataType": "net.maxon.interface.cstring-C",
									"content": "Displacement in the direction of the normal."
								},
								"net.maxon.description.data.base.datatype",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "float"
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "occlusion"
								},
								"net.maxon.description.data.base.classification",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "input"
								},
								"net.maxon.description.data.base.comment",
								{
									"dataType": "net.maxon.interface.cstring-C",
									"content": "Extra information about the occlusion of different parts of the\u000D\u000Amesh that this material is applied to.  Occlusion only makes\u000D\u000Asense as a surface-varying signal, and pathtracers will likely\u000D\u000Achoose to ignore it.  An occlusion value of 0.0 means the surface\u000D\u000Apoint is fully occluded by other parts of the surface, and a value\u000D\u000Aof 1.0 means the surface point is completely unoccluded by other parts of the surface."
								},
								"net.maxon.description.data.base.datatype",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "float"
								},
								"net.maxon.description.data.base.defaultvalue",
								{
									"dataType": "float64",
									"content": 1.0
								}
							]
						}
					}
				]
			},
			"net.maxon.nodespace.exchange.bundle.viewportmaterial",
			{
				"referenceClassType": "net.maxon.class.datadescriptiondefinition",
				"_info": {
					"referenceDataType": "net.maxon.interface.datadictionary-C",
					"_impl": {
						"_mode": 1,
						"_keyType": "net.maxon.datatype.internedid",
						"_fastData": [
							"net.maxon.description.data.info.classification",
							{
								"dataType": "net.maxon.datatype.id",
								"content": "portbundle"
							},
							"net.maxon.description.data.info.comment",
							{
								"dataType": "net.maxon.interface.cstring-C",
								"content": "This is a simple material description to offer viewport and export support for node materials."
							},
							"net.maxon.description.data.info.includefile",
							{
								"dataType": "net.maxon.interface.url-C",
								"content": {
									"referenceDataType": "net.maxon.interface.url-C",
									"_scheme": "relative",
									"_path": "frameworks/nodespace.framework/source/maxon/datadescription_node_bundles.h",
									"_authority": {},
									"_data": {}
								}
							}
						]
					}
				},
				"_description": [
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "include"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "net.maxon.object.base"
								},
								"net.maxon.description.data.base.generateignoreheader",
								{
									"dataType": "bool",
									"content": true
								},
								"net.maxon.description.data.base.include",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.object.base"
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "type"
								},
								"net.maxon.description.data.base.classification",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "input"
								},
								"net.maxon.description.data.base.comment",
								{
									"dataType": "net.maxon.interface.cstring-C",
									"content": "Defines the type of material in the viewport:\u000D\u000A- Constant: a dielectric material with specular layer on top and diffuse base.\u000D\u000A- Metal: a metal / conductor with GGX layer.\u000D\u000A- Dielectric: a dielectric material with specular layer on top and diffuse base.\u000D\u000ANote that we do not support dynamic metalness."
								},
								"net.maxon.description.data.base.datatype",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.datatype.internedid"
								},
								"net.maxon.description.data.base.defaultvalue",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "dielectric"
								},
								"net.maxon.description.data.base.enum",
								{
									"dataType": "(net.maxon.datatype.id,net.maxon.datatype.data)",
									"isArray": true,
									"content": [
										{
											"_0": "constant",
											"_1": {
												"dataType": "net.maxon.datatype.internedid",
												"content": "constant"
											}
										},
										{
											"_0": "metal",
											"_1": {
												"dataType": "net.maxon.datatype.internedid",
												"content": "metal"
											}
										},
										{
											"_0": "dielectric",
											"_1": {
												"dataType": "net.maxon.datatype.internedid",
												"content": "dielectric"
											}
										}
									]
								},
								"net.maxon.description.data.base.unit",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "none"
								},
								"net.maxon.node.attribute.constantparameter",
								{
									"dataType": "bool",
									"content": true
								},
								"net.maxon.node.attribute.hideportinnodegraph",
								{
									"dataType": "bool",
									"content": true
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "transmissivity "
								},
								"net.maxon.description.data.base.classification",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "input"
								},
								"net.maxon.description.data.base.comment",
								{
									"dataType": "net.maxon.interface.cstring-C",
									"content": "Defines the transparency of dielectric materials in the range [0.0, 1.0] from not transparent to fully transparent."
								},
								"net.maxon.description.data.base.datatype",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "float"
								},
								"net.maxon.description.data.base.limitvalue",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "both"
								},
								"net.maxon.description.data.base.maxvalue",
								{
									"dataType": "float64",
									"content": 1.0
								},
								"net.maxon.description.data.base.unit",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "none"
								},
								"net.maxon.node.attribute.constantparameter",
								{
									"dataType": "bool",
									"content": false
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "alpha"
								},
								"net.maxon.description.data.base.classification",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "input"
								},
								"net.maxon.description.data.base.comment",
								{
									"dataType": "net.maxon.interface.cstring-C",
									"content": "Defines the alpha of the material in the range [0.0, 1.0] from invisible to opaque."
								},
								"net.maxon.description.data.base.datatype",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "float"
								},
								"net.maxon.description.data.base.defaultvalue",
								{
									"dataType": "float64",
									"content": 1.0
								},
								"net.maxon.description.data.base.limitvalue",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "both"
								},
								"net.maxon.description.data.base.maxvalue",
								{
									"dataType": "float64",
									"content": 1.0
								},
								"net.maxon.description.data.base.unit",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "none"
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "base.color"
								},
								"net.maxon.description.data.base.classification",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "input"
								},
								"net.maxon.description.data.base.datatype",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.parametrictype.col<3,float>"
								},
								"net.maxon.description.data.base.defaultvalue",
								{
									"dataType": "net.maxon.parametrictype.col<3,float64>",
									"content": {
										"r": 0.7999999999999999,
										"g": 0.7999999999999999,
										"b": 0.7999999999999999
									}
								},
								"net.maxon.description.data.base.unit",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "none"
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "base.color_weight"
								},
								"net.maxon.description.data.base.classification",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "input"
								},
								"net.maxon.description.data.base.datatype",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "float"
								},
								"net.maxon.description.data.base.defaultvalue",
								{
									"dataType": "float64",
									"content": 1.0
								},
								"net.maxon.description.data.base.limitvalue",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "both"
								},
								"net.maxon.description.data.base.maxvalue",
								{
									"dataType": "float64",
									"content": 10000.0
								},
								"net.maxon.description.data.base.unit",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "none"
								},
								"net.maxon.node.attribute.constantparameter",
								{
									"dataType": "bool",
									"content": true
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "base.normal"
								},
								"net.maxon.description.data.base.classification",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "input"
								},
								"net.maxon.description.data.base.comment",
								{
									"dataType": "net.maxon.interface.cstring-C",
									"content": "Data is expected to be in [0,1] range with the geometric normal = [0.5, 0.5, 1.0].\u000D\u000AThe tangent frame is oriented in accordance with OpenGL and Unity."
								},
								"net.maxon.description.data.base.datatype",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.parametrictype.vec<3,float>"
								},
								"net.maxon.description.data.base.defaultvalue",
								{
									"dataType": "net.maxon.parametrictype.vec<3,float64>",
									"content": {
										"x": 0.5,
										"y": 0.5,
										"z": 1.0
									}
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "base.normal_weight"
								},
								"net.maxon.description.data.base.classification",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "input"
								},
								"net.maxon.description.data.base.datatype",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "float"
								},
								"net.maxon.description.data.base.unit",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "percent"
								},
								"net.maxon.node.attribute.constantparameter",
								{
									"dataType": "bool",
									"content": true
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "specular.color"
								},
								"net.maxon.description.data.base.classification",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "input"
								},
								"net.maxon.description.data.base.datatype",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.parametrictype.col<3,float>"
								},
								"net.maxon.description.data.base.defaultvalue",
								{
									"dataType": "net.maxon.parametrictype.col<3,float64>",
									"content": {
										"r": 0.39999999999999999,
										"g": 0.39999999999999999,
										"b": 0.9019607843137255
									}
								},
								"net.maxon.description.data.base.unit",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "none"
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "specular.color_weight"
								},
								"net.maxon.description.data.base.classification",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "input"
								},
								"net.maxon.description.data.base.datatype",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "float"
								},
								"net.maxon.description.data.base.defaultvalue",
								{
									"dataType": "float64",
									"content": 1.0
								},
								"net.maxon.description.data.base.limitvalue",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "both"
								},
								"net.maxon.description.data.base.maxvalue",
								{
									"dataType": "float64",
									"content": 10000.0
								},
								"net.maxon.description.data.base.unit",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "none"
								},
								"net.maxon.node.attribute.constantparameter",
								{
									"dataType": "bool",
									"content": true
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "specular.normal"
								},
								"net.maxon.description.data.base.classification",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "input"
								},
								"net.maxon.description.data.base.comment",
								{
									"dataType": "net.maxon.interface.cstring-C",
									"content": "Data is expected to be in [0,1] range with the geometric normal = [0.5, 0.5, 1.0].\u000D\u000AThe tangent frame is oriented in accordance with OpenGL and Unity."
								},
								"net.maxon.description.data.base.datatype",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.parametrictype.vec<3,float>"
								},
								"net.maxon.description.data.base.defaultvalue",
								{
									"dataType": "net.maxon.parametrictype.vec<3,float64>",
									"content": {
										"x": 0.5,
										"y": 0.5,
										"z": 1.0
									}
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "specular.normal_weight"
								},
								"net.maxon.description.data.base.classification",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "input"
								},
								"net.maxon.description.data.base.datatype",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "float"
								},
								"net.maxon.description.data.base.unit",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "percent"
								},
								"net.maxon.node.attribute.constantparameter",
								{
									"dataType": "bool",
									"content": true
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "specular.roughness"
								},
								"net.maxon.description.data.base.classification",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "input"
								},
								"net.maxon.description.data.base.datatype",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "float"
								},
								"net.maxon.description.data.base.defaultvalue",
								{
									"dataType": "float64",
									"content": 0.1
								},
								"net.maxon.description.data.base.limitvalue",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "both"
								},
								"net.maxon.description.data.base.maxvalue",
								{
									"dataType": "float64",
									"content": 1.0
								},
								"net.maxon.description.data.base.unit",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "none"
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "specular.ior"
								},
								"net.maxon.description.data.base.classification",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "input"
								},
								"net.maxon.description.data.base.datatype",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "float"
								},
								"net.maxon.description.data.base.defaultvalue",
								{
									"dataType": "float64",
									"content": 1.35
								},
								"net.maxon.description.data.base.limitvalue",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "both"
								},
								"net.maxon.description.data.base.maxvalue",
								{
									"dataType": "float64",
									"content": 100.0
								},
								"net.maxon.description.data.base.minvalue",
								{
									"dataType": "float64",
									"content": 1.0
								},
								"net.maxon.description.data.base.unit",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "none"
								},
								"net.maxon.node.attribute.constantparameter",
								{
									"dataType": "bool",
									"content": true
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "emission.color"
								},
								"net.maxon.description.data.base.classification",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "input"
								},
								"net.maxon.description.data.base.datatype",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.parametrictype.col<3,float>"
								},
								"net.maxon.description.data.base.defaultvalue",
								{
									"dataType": "net.maxon.parametrictype.col<3,float64>",
									"content": {
										"r": 0.0,
										"g": 0.0,
										"b": 1.0
									}
								},
								"net.maxon.description.data.base.unit",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "none"
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "emission.color_weight"
								},
								"net.maxon.description.data.base.classification",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "input"
								},
								"net.maxon.description.data.base.datatype",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "float"
								},
								"net.maxon.description.data.base.limitvalue",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "both"
								},
								"net.maxon.description.data.base.maxvalue",
								{
									"dataType": "float64",
									"content": 10000.0
								},
								"net.maxon.description.data.base.unit",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "none"
								},
								"net.maxon.node.attribute.constantparameter",
								{
									"dataType": "bool",
									"content": true
								}
							]
						}
					}
				]
			},
			"net.maxon.nodespace.exchange.node.exchangenode",
			{
				"referenceClassType": "net.maxon.class.datadescriptiondefinition",
				"_info": {
					"referenceDataType": "net.maxon.interface.datadictionary-C",
					"_impl": {
						"_mode": 1,
						"_keyType": "net.maxon.datatype.internedid",
						"_fastData": [
							"net.maxon.description.data.info.classification",
							{
								"dataType": "net.maxon.datatype.id",
								"content": "node"
							},
							"net.maxon.description.data.info.includefile",
							{
								"dataType": "net.maxon.interface.url-C",
								"content": {
									"referenceDataType": "net.maxon.interface.url-C",
									"_scheme": "relative",
									"_path": "frameworks/nodespace.framework/source/maxon/datadescription_node_spaces.h",
									"_authority": {},
									"_data": {}
								}
							}
						]
					}
				},
				"_description": [
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "include"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "net.maxon.node.base"
								},
								"net.maxon.description.data.base.generateignoreheader",
								{
									"dataType": "bool",
									"content": true
								},
								"net.maxon.description.data.base.include",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.node.base"
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "type"
								},
								"net.maxon.description.data.base.classification",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "none"
								},
								"net.maxon.description.data.base.datatype",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.datatype.id"
								},
								"net.maxon.description.data.base.defaultvalue",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "viewportmaterial"
								},
								"net.maxon.description.data.base.enum",
								{
									"dataType": "(net.maxon.datatype.id,net.maxon.datatype.data)",
									"isArray": true,
									"content": [
										{
											"_0": "viewportmaterial",
											"_1": {
												"dataType": "net.maxon.datatype.id",
												"content": "viewportmaterial"
											}
										},
										{
											"_0": "usdpreviewsurface",
											"_1": {
												"dataType": "net.maxon.datatype.id",
												"content": "usdpreviewsurface"
											}
										}
									]
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "width"
								},
								"net.maxon.description.data.base.classification",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "none"
								},
								"net.maxon.description.data.base.datatype",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "int"
								},
								"net.maxon.description.data.base.defaultvalue",
								{
									"dataType": "int64",
									"content": 512
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "height"
								},
								"net.maxon.description.data.base.classification",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "none"
								},
								"net.maxon.description.data.base.datatype",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "int"
								},
								"net.maxon.description.data.base.defaultvalue",
								{
									"dataType": "int64",
									"content": 512
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "viewportmaterial"
								},
								"net.maxon.description.data.base.classification",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "none"
								},
								"net.maxon.description.data.base.datatype",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.nodespace.exchange.bundle.viewportmaterial"
								},
								"net.maxon.description.data.base.isvariadic",
								{
									"dataType": "bool",
									"content": false
								},
								"net.maxon.description.data.base.variadiccommands",
								{
									"dataType": "net.maxon.datatype.id",
									"isArray": true,
									"content": []
								},
								"net.maxon.description.data.base.variadiccount",
								{
									"dataType": "int64",
									"content": 1
								},
								"net.maxon.node.attribute.constantparameter",
								{
									"dataType": "bool",
									"content": false
								},
								"net.maxon.node.attribute.isconverterport",
								{
									"dataType": "bool",
									"content": false
								},
								"net.maxon.node.attribute.templateparameter",
								{
									"dataType": "bool",
									"content": false
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "usdpreviewsurface"
								},
								"net.maxon.description.data.base.classification",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "none"
								},
								"net.maxon.description.data.base.datatype",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.nodespace.exchange.bundle.usdpreviewsurface"
								},
								"net.maxon.description.data.base.isvariadic",
								{
									"dataType": "bool",
									"content": false
								},
								"net.maxon.description.data.base.variadiccommands",
								{
									"dataType": "net.maxon.datatype.id",
									"isArray": true,
									"content": []
								},
								"net.maxon.description.data.base.variadiccount",
								{
									"dataType": "int64",
									"content": 1
								}
							]
						}
					}
				]
			}
		],
		"_guiDescriptionsVersion": 6,
		"_guiDescriptions": [
			"net.maxon.nodespace.base",
			{
				"referenceClassType": "net.maxon.class.datadescriptiondefinition",
				"_info": {},
				"_description": [
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "include"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "net.maxon.object.base"
								},
								"net.maxon.description.data.base.generateignoreheader",
								{
									"dataType": "bool",
									"content": true
								},
								"net.maxon.description.data.base.include",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.object.base"
								}
							]
						}
					}
				]
			},
			"net.maxon.nodespace.exchange.bundle.usdpreviewsurface",
			{
				"referenceClassType": "net.maxon.class.datadescriptiondefinition",
				"_info": {
					"referenceDataType": "net.maxon.interface.datadictionary-C",
					"_impl": {
						"_mode": 0
					}
				},
				"_description": [
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "include"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "net.maxon.object.base"
								},
								"net.maxon.description.data.base.generateignoreheader",
								{
									"dataType": "bool",
									"content": true
								},
								"net.maxon.description.data.base.include",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.object.base"
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "diffuseColor"
								},
								"net.maxon.description.ui.base.addminmax.limitvalue",
								{
									"dataType": "bool",
									"content": true
								},
								"net.maxon.description.ui.base.addminmax.maxvalue",
								{
									"dataType": "net.maxon.parametrictype.col<3,float64>",
									"content": {
										"r": 1.0,
										"g": 1.0,
										"b": 1.0
									}
								},
								"net.maxon.description.ui.base.addminmax.stepvalue",
								{
									"dataType": "net.maxon.parametrictype.col<3,float64>",
									"content": {
										"r": 0.01,
										"g": 0.01,
										"b": 0.01
									}
								},
								"net.maxon.description.ui.base.groupid",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": ""
								},
								"net.maxon.description.ui.base.guitypeid",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.ui.color"
								},
								"net.maxon.description.ui.net.maxon.ui.number.slider",
								{
									"dataType": "bool",
									"content": true
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "emissiveColor"
								},
								"net.maxon.description.ui.base.guitypeid",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.ui.color"
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "workflow"
								},
								"net.maxon.description.ui.base.guitypeid",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.ui.enum"
								},
								"net.maxon.description.ui.base.optionalchildrenstrings",
								{
									"dataType": "bool",
									"content": false
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "specularColor"
								},
								"net.maxon.description.ui.base.enable",
								{
									"dataType": "net.maxon.interface.cstring-C",
									"content": "workflow == \"specular\""
								},
								"net.maxon.description.ui.base.guitypeid",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.ui.color"
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "metallic"
								},
								"net.maxon.description.ui.base.enable",
								{
									"dataType": "net.maxon.interface.cstring-C",
									"content": "workflow == \"metalness\""
								},
								"net.maxon.description.ui.base.guitypeid",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.ui.number"
								},
								"net.maxon.description.ui.net.maxon.ui.number.slider",
								{
									"dataType": "bool",
									"content": true
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "roughness"
								},
								"net.maxon.description.ui.base.guitypeid",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.ui.number"
								},
								"net.maxon.description.ui.net.maxon.ui.number.slider",
								{
									"dataType": "bool",
									"content": true
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "clearcoat"
								},
								"net.maxon.description.ui.base.guitypeid",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.ui.number"
								},
								"net.maxon.description.ui.net.maxon.ui.number.slider",
								{
									"dataType": "bool",
									"content": true
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "clearcoatRoughness"
								},
								"net.maxon.description.ui.base.guitypeid",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.ui.number"
								},
								"net.maxon.description.ui.net.maxon.ui.number.slider",
								{
									"dataType": "bool",
									"content": true
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "opacity"
								},
								"net.maxon.description.ui.base.guitypeid",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.ui.number"
								},
								"net.maxon.description.ui.net.maxon.ui.number.slider",
								{
									"dataType": "bool",
									"content": true
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "opacityThreshold"
								},
								"net.maxon.description.ui.base.guitypeid",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.ui.number"
								},
								"net.maxon.description.ui.net.maxon.ui.number.slider",
								{
									"dataType": "bool",
									"content": true
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "ior"
								},
								"net.maxon.description.ui.base.guitypeid",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.ui.number"
								},
								"net.maxon.description.ui.net.maxon.ui.number.slider",
								{
									"dataType": "bool",
									"content": true
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "normal"
								},
								"net.maxon.description.ui.base.guitypeid",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.ui.number"
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "displacement"
								},
								"net.maxon.description.ui.base.guitypeid",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.ui.number"
								},
								"net.maxon.description.ui.net.maxon.ui.number.slider",
								{
									"dataType": "bool",
									"content": true
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "occlusion"
								},
								"net.maxon.description.ui.base.guitypeid",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.ui.number"
								},
								"net.maxon.description.ui.net.maxon.ui.number.slider",
								{
									"dataType": "bool",
									"content": true
								}
							]
						}
					}
				]
			},
			"net.maxon.nodespace.exchange.bundle.viewportmaterial",
			{
				"referenceClassType": "net.maxon.class.datadescriptiondefinition",
				"_info": {
					"referenceDataType": "net.maxon.interface.datadictionary-C",
					"_impl": {
						"_mode": 0
					}
				},
				"_description": [
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "include"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "net.maxon.object.base"
								},
								"net.maxon.description.data.base.generateignoreheader",
								{
									"dataType": "bool",
									"content": true
								},
								"net.maxon.description.data.base.include",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.object.base"
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "group"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "group.general"
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "type"
								},
								"net.maxon.description.ui.base.groupid",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "group.general"
								},
								"net.maxon.description.ui.base.guitypeid",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.ui.enum"
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "transmissivity "
								},
								"net.maxon.description.ui.base.addminmax.limitvalue",
								{
									"dataType": "bool",
									"content": true
								},
								"net.maxon.description.ui.base.addminmax.maxvalue",
								{
									"dataType": "float64",
									"content": 1.0
								},
								"net.maxon.description.ui.base.addminmax.stepvalue",
								{
									"dataType": "float64",
									"content": 0.01
								},
								"net.maxon.description.ui.base.groupid",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "group.general"
								},
								"net.maxon.description.ui.base.guitypeid",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.ui.number"
								},
								"net.maxon.description.ui.net.maxon.ui.number.slider",
								{
									"dataType": "bool",
									"content": true
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "alpha"
								},
								"net.maxon.description.ui.base.addminmax.limitvalue",
								{
									"dataType": "bool",
									"content": true
								},
								"net.maxon.description.ui.base.addminmax.maxvalue",
								{
									"dataType": "float64",
									"content": 1.0
								},
								"net.maxon.description.ui.base.addminmax.stepvalue",
								{
									"dataType": "float64",
									"content": 0.01
								},
								"net.maxon.description.ui.base.groupid",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "group.general"
								},
								"net.maxon.description.ui.base.guitypeid",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.ui.number"
								},
								"net.maxon.description.ui.net.maxon.ui.number.slider",
								{
									"dataType": "bool",
									"content": true
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "group"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "group.base"
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "base.color"
								},
								"net.maxon.description.ui.base.groupid",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "group.base"
								},
								"net.maxon.description.ui.base.guitypeid",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.ui.color"
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "base.color_weight"
								},
								"net.maxon.description.ui.base.addminmax.limitvalue",
								{
									"dataType": "bool",
									"content": true
								},
								"net.maxon.description.ui.base.addminmax.maxvalue",
								{
									"dataType": "float64",
									"content": 1.0
								},
								"net.maxon.description.ui.base.addminmax.stepvalue",
								{
									"dataType": "float64",
									"content": 0.01
								},
								"net.maxon.description.ui.base.groupid",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "group.base"
								},
								"net.maxon.description.ui.base.guitypeid",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.ui.number"
								},
								"net.maxon.description.ui.net.maxon.ui.number.slider",
								{
									"dataType": "bool",
									"content": true
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "base.normal"
								},
								"net.maxon.description.ui.base.addminmax.limitvalue",
								{
									"dataType": "bool",
									"content": true
								},
								"net.maxon.description.ui.base.addminmax.maxvalue",
								{
									"dataType": "net.maxon.parametrictype.vec<3,float64>",
									"content": {
										"x": 1.0,
										"y": 1.0,
										"z": 1.0
									}
								},
								"net.maxon.description.ui.base.groupid",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "group.base"
								},
								"net.maxon.description.ui.base.guitypeid",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.ui.number"
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "base.normal_weight"
								},
								"net.maxon.description.ui.base.addminmax.limitvalue",
								{
									"dataType": "bool",
									"content": true
								},
								"net.maxon.description.ui.base.addminmax.maxvalue",
								{
									"dataType": "float64",
									"content": 1.0
								},
								"net.maxon.description.ui.base.addminmax.minvalue",
								{
									"dataType": "float64",
									"content": -1.0
								},
								"net.maxon.description.ui.base.addminmax.stepvalue",
								{
									"dataType": "float64",
									"content": 0.01
								},
								"net.maxon.description.ui.base.groupid",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "group.base"
								},
								"net.maxon.description.ui.base.guitypeid",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.ui.number"
								},
								"net.maxon.description.ui.net.maxon.ui.number.slider",
								{
									"dataType": "bool",
									"content": true
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "group"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "group.specular"
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "specular.color"
								},
								"net.maxon.description.ui.base.groupid",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "group.specular"
								},
								"net.maxon.description.ui.base.guitypeid",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.ui.color"
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "specular.color_weight"
								},
								"net.maxon.description.ui.base.addminmax.limitvalue",
								{
									"dataType": "bool",
									"content": true
								},
								"net.maxon.description.ui.base.addminmax.maxvalue",
								{
									"dataType": "float64",
									"content": 1.0
								},
								"net.maxon.description.ui.base.addminmax.stepvalue",
								{
									"dataType": "float64",
									"content": 0.01
								},
								"net.maxon.description.ui.base.groupid",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "group.specular"
								},
								"net.maxon.description.ui.base.guitypeid",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.ui.number"
								},
								"net.maxon.description.ui.net.maxon.ui.number.slider",
								{
									"dataType": "bool",
									"content": true
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "specular.normal"
								},
								"net.maxon.description.ui.base.groupid",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "group.specular"
								},
								"net.maxon.description.ui.base.guitypeid",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.ui.number"
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "specular.normal_weight"
								},
								"net.maxon.description.ui.base.addminmax.limitvalue",
								{
									"dataType": "bool",
									"content": true
								},
								"net.maxon.description.ui.base.addminmax.maxvalue",
								{
									"dataType": "float64",
									"content": 1.0
								},
								"net.maxon.description.ui.base.addminmax.minvalue",
								{
									"dataType": "float64",
									"content": -1.0
								},
								"net.maxon.description.ui.base.addminmax.stepvalue",
								{
									"dataType": "float64",
									"content": 0.01
								},
								"net.maxon.description.ui.base.groupid",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "group.specular"
								},
								"net.maxon.description.ui.base.guitypeid",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.ui.number"
								},
								"net.maxon.description.ui.net.maxon.ui.number.slider",
								{
									"dataType": "bool",
									"content": true
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "specular.roughness"
								},
								"net.maxon.description.ui.base.addminmax.stepvalue",
								{
									"dataType": "float64",
									"content": 0.01
								},
								"net.maxon.description.ui.base.groupid",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "group.specular"
								},
								"net.maxon.description.ui.base.guitypeid",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.ui.number"
								},
								"net.maxon.description.ui.net.maxon.ui.number.slider",
								{
									"dataType": "bool",
									"content": true
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "specular.ior"
								},
								"net.maxon.description.ui.base.addminmax.limitvalue",
								{
									"dataType": "bool",
									"content": true
								},
								"net.maxon.description.ui.base.addminmax.maxvalue",
								{
									"dataType": "float64",
									"content": 10.0
								},
								"net.maxon.description.ui.base.addminmax.stepvalue",
								{
									"dataType": "float64",
									"content": 0.01
								},
								"net.maxon.description.ui.base.groupid",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "group.specular"
								},
								"net.maxon.description.ui.base.guitypeid",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.ui.number"
								},
								"net.maxon.description.ui.net.maxon.ui.number.slider",
								{
									"dataType": "bool",
									"content": true
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "group"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "group.emission"
								},
								"net.maxon.description.ui.base.groupid",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": ""
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "emission.color"
								},
								"net.maxon.description.ui.base.groupid",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "group.emission"
								},
								"net.maxon.description.ui.base.guitypeid",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.ui.color"
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "emission.color_weight"
								},
								"net.maxon.description.ui.base.addminmax.limitvalue",
								{
									"dataType": "bool",
									"content": true
								},
								"net.maxon.description.ui.base.addminmax.maxvalue",
								{
									"dataType": "float64",
									"content": 1.0
								},
								"net.maxon.description.ui.base.addminmax.stepvalue",
								{
									"dataType": "float64",
									"content": 0.01
								},
								"net.maxon.description.ui.base.groupid",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "group.emission"
								},
								"net.maxon.description.ui.base.guitypeid",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.ui.number"
								},
								"net.maxon.description.ui.net.maxon.ui.number.slider",
								{
									"dataType": "bool",
									"content": true
								}
							]
						}
					}
				]
			},
			"net.maxon.nodespace.exchange.node.exchangenode",
			{
				"referenceClassType": "net.maxon.class.datadescriptiondefinition",
				"_info": {
					"referenceDataType": "net.maxon.interface.datadictionary-C",
					"_impl": {
						"_mode": 1,
						"_keyType": "net.maxon.datatype.internedid",
						"_fastData": [
							"net.maxon.description.ui.info.menucategory",
							{
								"dataType": "net.maxon.datatype.id",
								"content": "net.maxon.assetcategory.uncategorized"
							}
						]
					}
				},
				"_description": [
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "include"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "net.maxon.node.base"
								},
								"net.maxon.description.data.base.generateignoreheader",
								{
									"dataType": "bool",
									"content": true
								},
								"net.maxon.description.data.base.include",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.node.base"
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "type"
								},
								"net.maxon.description.ui.base.groupid",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "net.maxon.node.base.group.inputs"
								},
								"net.maxon.description.ui.base.guitypeid",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.ui.enum"
								},
								"net.maxon.description.ui.base.optionalchildrenstrings",
								{
									"dataType": "bool",
									"content": false
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "width"
								},
								"net.maxon.description.ui.base.groupid",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "net.maxon.node.base.group.inputs"
								},
								"net.maxon.description.ui.base.guitypeid",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.ui.number"
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "height"
								},
								"net.maxon.description.ui.base.groupid",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "net.maxon.node.base.group.inputs"
								},
								"net.maxon.description.ui.base.guitypeid",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.ui.number"
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "command"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "bakecommand"
								},
								"net.maxon.description.ui.base.groupid",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "net.maxon.node.base.group.inputs"
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "separator"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "net.maxon.nodespace.exchange.node.exchangenode.D2Q$2oTnCJjur6XkghRSQ$"
								},
								"net.maxon.description.ui.base.groupid",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "net.maxon.node.base.group.inputs"
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "viewportmaterial"
								},
								"net.maxon.description.ui.base.groupid",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "net.maxon.node.base.group.inputs"
								},
								"net.maxon.description.ui.base.guitypeid",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.ui.variadicport"
								},
								"net.maxon.description.ui.net.maxon.ui.variadicport.complexcustomui",
								{
									"dataType": "int32",
									"content": 0
								}
							]
						}
					},
					{
						"referenceDataType": "net.maxon.interface.datadictionary-C",
						"_impl": {
							"_mode": 1,
							"_keyType": "net.maxon.datatype.internedid",
							"_fastData": [
								"net.maxon.description.base.command",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "attribute"
								},
								"net.maxon.description.base.identifier",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "usdpreviewsurface"
								},
								"net.maxon.description.ui.base.groupid",
								{
									"dataType": "net.maxon.datatype.internedid",
									"content": "net.maxon.node.base.group.inputs"
								},
								"net.maxon.description.ui.base.guitypeid",
								{
									"dataType": "net.maxon.datatype.id",
									"content": "net.maxon.ui.variadicport"
								},
								"net.maxon.description.ui.net.maxon.ui.variadicport.complexcustomui",
								{
									"dataType": "int32",
									"content": 0
								}
							]
						}
					}
				]
			}
		]
	}
}
